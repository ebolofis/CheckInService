@using CheckinBack.Models;
@using CheckInService.Models;

@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var config = ViewBag.MainConfig as SettingsModel;
    var decryptedstring = ViewBag.DecryptedString as string;
    var encryptedstring = ViewBag.EncryptedString as string;
}

<div id="contactlessMitsis" class="custom-flex-column  custom-flex-center " style="margin-top:150px; border:4px solid #ac9766; width:100%; height:900px;" data-bind="visible: page1.IsContactless()">
    <div class="box custom-flex-row custom-flex-10 custom-flex-center" style="margin-top:-0.8rem; height:40%;margin-bottom:20px;border:2px medium #B8860B;">
        <div class="imgBx">
            <img class="imgstyle" width="350" height="120" data-bind="attr: { 'src' : page1.HotelLogo() }" />
            <h2 style="margin-right:14rem;margin-bottom:-12.5rem;background-color:#ac9766;font-size:16px;">Enjoy your stay </h2>
        </div>
    </div>
    <div class="custom-flex-row custom-flex-10 custom-flex-center custom-full-width " style="background-color:#ac9766; text-shadow: -0.5px 0 gray, 0 0.5px gray, 0.5px 0 gray, 0 -0.5px gray;border: 2px solid gold;margin-top: 25px"> <h1>&nbsp;Contactless Fast Check-In </h1></div>
    <div class="custom-flex-column custom-flex-10 custom-flex-center" style="margin-top: 20px; background-color: #ac9766; border: 1px solid #ac9766">
        <div class=" custom-flex-100 custom-flex-start custom-full-width custom-flex-column" style="background-color:whitesmoke; margin-top:50px; width:400px;">
            <h3 class="custom-flex-100 custom-flex-start " style="align-self:start;font-family:Montserrat;font-size:24px;" id="firstname">First name:</h3>
            <h3 class="custom-flex-100 custom-flex-start" style="align-self:start;font-family:Montserrat;font-size:24px;" id="lastname">Last name:</h3>
            <div id="qrcode" class="custom-flex-center " style="background-color: #ac9766;margin-top: 25px !important;margin-bottom: 15px;border: 1px solid #B8860B;"></div>
        </div>
    </div>
    <div class="custom-flex-row custom-flex-5 custom-flex-start" style="margin-top: 20px;margin-bottom: 10px;"></div>
    <div class="custom-flex-row custom-flex-5 custom-flex-start">
        <div class="custom-flex-row custom-flex-50 custom-flex-start">
        </div>
    </div>
</div>

<div id="contentMainFormMitsis" class="container" data-bind="visible: !page1.IsContactless()">
    <div class="row">
        <div class="col-xs-12" style="padding-left:0;padding-right:0;">
            <br />
            <form autocomplete="none">
                <div class="row">
                    <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11">
                        <div class="text-center">
                            <img width="350" height="120" id="LogoImgId" data-bind="attr: { 'src' : page1.HotelLogo() }" />
                        </div>
                    </div>
                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
                        <div class="text-center badge" data-bind="visible:SignalRHandler.showTimerFlag()" style="background-color:#ac9766; color:white; font-size:15px; font-family:Montserrat">
                            <span id="countdowntimer">5</span>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <br />
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" data-bind="visible: page1.hasErrorMessage() == true">
                        <div class="notification mt-4 notification-error">
                            <div class="notification-theme error">
                                <div class="notification-icon">
                                    <img src="~/images/Resources/cancel.png">
                                </div>
                            </div>
                            <div class="notification-content" data-bind="text: page1.errorMessage()"></div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <div class="bordered title-1">Welcome</div>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <br />
                        <br />
                    </div>
                </div>
                <!-- ######################################################################## One "tab" for each step in the form: ################################################################## -->
                <!-- ################################################################################################################################################################################ -->
                <!-- ko if: SignalRHandler.customer() == null -->
                <div data-bind="with: LanguageHandler">
                    <div class="row form-row">
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <label for="inputFirstNameMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().FirstName+'*':null"></label>
                            <input class="form-control" type="text" id="inputFirstNameMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().FirstName:null" spellcheck="false" autocomplete="none" required>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <label for="inputLastNameMitsis" style="font-family: Montserrat;font-size: 13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().LastName+'*':null"></label>
                            <input class="form-control" type="text" id="inputLastNameMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().LastName:null" spellcheck="false" autocomplete="none" required>
                        </div>
                    </div>
                    <div class="row form-row">
                        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                            <label for="inputStreetAddressMitsis" style="font-family: Montserrat;font-size: 13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().Street:null"></label>
                            <input class="form-control" type="text" id="inputStreetAddressMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Street:null" spellcheck="false" autocomplete="none">
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="">
                            <label for="inputZipcodeMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().ZipCode:null"></label>
                            <input class="form-control" type="text" id="inputZipcodeMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().ZipCode:null" spellcheck="false" autocomplete="none">
                        </div>
                    </div>
                    <div class="row form-row">
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <label for="inputCityMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().City:null"></label>
                            <input class="form-control" type="text" id="inputCityMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().City:null" spellcheck="false" autocomplete="none">
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <label for="inputCountryMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().Country:null"></label>
                            <select class="form-control" id="inputNationalityMitsis" style="padding-left:0;" data-bind="options: ResourceHandler.Nationality(), optionsText: 'Description', optionsValue: 'Id',value: SignalRHandler.customer() != null?SignalRHandler.customer().Nationality:0">
                            </select>
                        </div>
                    </div>
                    <div class="row form-row">
                        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                            <label for="inputEmailMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().Email+'*':null"></label>
                            <input class="form-control" type="text" onfocus="OnFocusChanges(this)" id="inputEmailMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Email:null" spellcheck="false" autocomplete="none" required>
                            <label style="font-family:Montserrat; font-size:12px; color:#767676; line-height: 1.4; margin-top:4px;" data-bind="text: selectedDictionary() != null?selectedDictionary().EmailTxt:null"></label>
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            <label for="inputPassportNoMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().Passport:null"></label>
                            <input class="form-control" type="text" id="inputPassportNoMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Passport:null" spellcheck="false" autocomplete="none">
                        </div>
                    </div>
                    <div class="row form-row">
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <label for="inputMobileMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().Mobile:null"></label>
                            <input class="form-control" type="text" id="inputMobileMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Mobile:null" spellcheck="false" autocomplete="none">
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <label for="inputRoomMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().Room:null"></label>
                            <input class="form-control" type="text" id="inputRoomMitsis" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Room:null" spellcheck="false" autocomplete="none" readonly>
                        </div>
                    </div>
                    <!-- ###################################################################################### Accept Checkboxes ####################################################################### -->
                    <!-- ################################################################################################################################################################################ -->
                    <div class="row form-row">
                        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                            <label style="font-family:Montserrat;font-size:13px;" class="form-check-label" for="inputAcceptEmails" data-bind="text: selectedDictionary() != null?selectedDictionary().SendEmail:null"></label>
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="text-align: center;">
                            <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                                <input type="radio" name="optradio" id="inputAcceptEmailsYes"><span data-bind="text: selectedDictionary() != null?selectedDictionary().YesBtns:null"></span>
                            </label>
                            <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                                <input type="radio" name="optradio" id="inputAcceptEmailsNo"><span data-bind="text: selectedDictionary() != null?selectedDictionary().NoBtns:null"></span>
                            </label>
                        </div>
                    </div>
                    <div class="row form-row">
                        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                            <label style="font-family:Montserrat;font-size:13px;" class="form-check-label" for="inputAcceptEmails" data-bind="html: selectedDictionary() != null?selectedDictionary().SendLetter:null"></label>
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="text-align: center;">
                            <label style="font-family:Montserrat;font-size:13px;font-weight:bold" class="radio-inline">
                                <input type="radio" name="optradio2" id="inputAcceptGDPRYes"><span data-bind="text: selectedDictionary() != null?selectedDictionary().YesBtns:null"></span>
                            </label>
                            <label style="font-family:Montserrat;font-size:13px;font-weight:bold" class="radio-inline">
                                <input type="radio" name="optradio2" id="inputAcceptGDPRNo"><span data-bind="text: selectedDictionary() != null?selectedDictionary().NoBtns:null"></span>
                            </label>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <br />
                        </div>
                    </div>
                </div>
                <!-- /ko -->
                <!-- ko if: SignalRHandler.customer() != null -->
                <!-- ko if: SignalRHandler.baseinfo() != null && SignalRHandler.baseinfo().Mode != 4 -->
                <div data-bind="foreach: SignalRHandler.customer()">
                    <div class="tab">
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputFirstNameMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().FirstName+'*':null"></label>
                                <input class="form-control" type="text" data-bind="value: FirstName, attr: {id:'inputFirstNameMitsis_' + Index}" spellcheck="false" autocomplete="none" required>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputLastNameMitsis" style="font-family: Montserrat;font-size: 13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().LastName+'*':null"></label>
                                <input class="form-control" type="text" data-bind="value: LastName, attr: {id:'inputLastNameMitsis_' + Index}" spellcheck="false" autocomplete="none" required>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label for="inputStreetAddressMitsis" style="font-family: Montserrat;font-size: 13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Street:null"></label>
                                <input class="form-control" type="text" data-bind="value: Street, attr: {id:'inputStreetAddressMitsis_' + Index}" spellcheck="false" autocomplete="none">
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="">
                                <label for="inputZipcodeMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().ZipCode:null"></label>
                                <input class="form-control" type="text" data-bind="value: ZipCode, attr: {id:'inputZipcodeMitsis_' + Index}" spellcheck="false" autocomplete="none">
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputCityMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().City:null"></label>
                                <input class="form-control" type="text" data-bind="value: City, attr: {id:'inputCityMitsis_' + Index}" spellcheck="false" autocomplete="none">
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputCountryMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Country:null"></label>
                                <select class="form-control" style="padding-left:0;" data-bind="options: ResourceHandler.Nationality(), optionsText: 'Description', optionsValue: 'Id',value: Nationality, attr: {id:'inputNationalityMitsis_' + Index}, event: { change: GetSelectedValue.bind($data, $data)}">
                                </select>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label for="inputEmailMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Email+'*':null"></label>
                                <input class="form-control" type="text" onfocus="OnFocusChanges(this)" data-bind="value: Email, attr: {id:'inputEmailMitsis_' + Index}" spellcheck="false" autocomplete="none" required>
                                <label style="font-family:Montserrat; font-size:12px; color:#767676; line-height: 1.4; margin-top:4px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().EmailTxt:null"></label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                <label for="inputPassportNoMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Passport:null"></label>
                                <input class="form-control" type="text" data-bind="value: Passport, attr: {id:'inputPassportNoMitsis_' + Index}" spellcheck="false" autocomplete="none">
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputMobileMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Mobile:null"></label>
                                <input class="form-control" type="text" data-bind="value: Mobile, attr: {id:'inputMobileMitsis_' + Index}" spellcheck="false" autocomplete="none">
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputRoomMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Room:null"></label>
                                <input class="form-control" type="text" data-bind="value: Room, attr: {id:'inputRoomMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                        </div>
                        <!-- ###################################################################################### Accept Checkboxes ####################################################################### -->
                        <!-- ################################################################################################################################################################################ -->
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label style="font-family:Montserrat;font-size:13px;" class="form-check-label" for="inputAcceptEmails" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().SendEmail:null"></label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="text-align: center;">
                                <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptEmailsYes_' + Index, name:'optradio_' + + Index}" onclick="page1.CheckboxesCustomerInputSendEmail()"><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().YesBtns:null"></span>
                                </label>
                                <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptEmailsNo_' + Index, name:'optradio_' + + Index}" onclick="page1.CheckboxesCustomerInputSendEmail()"><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().NoBtns:null"></span>
                                </label>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label style="font-family:Montserrat;font-size:13px;" class="form-check-label" for="inputAcceptLetter" data-bind="html: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().SendLetter:null"></label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="text-align: center;">
                                <label style="font-family:Montserrat;font-size:13px;font-weight:bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptGDPRYes_' + Index, name:'optradio2_' + + Index}" onclick="page1.CheckboxesCustomerInputGDPR()"><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().YesBtns:null"></span>
                                </label>
                                <label style="font-family:Montserrat;font-size:13px;font-weight:bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptGDPRNo_' + Index, name:'optradio2_' + + Index}" onclick="page1.CheckboxesCustomerInputGDPR()"><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().NoBtns:null"></span>
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /ko -->
                <!-- ko if: SignalRHandler.baseinfo() != null && SignalRHandler.baseinfo().Mode == 4 -->
                <div data-bind="foreach: SignalRHandler.customer()">
                    <div class="tab">
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputFirstNameMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().FirstName+'*':null"></label>
                                <input class="form-control" type="text" data-bind="value: FirstName, attr: {id:'inputFirstNameMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputLastNameMitsis" style="font-family: Montserrat;font-size: 13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().LastName+'*':null"></label>
                                <input class="form-control" type="text" data-bind="value: LastName, attr: {id:'inputLastNameMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label for="inputStreetAddressMitsis" style="font-family: Montserrat;font-size: 13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Street:null"></label>
                                <input class="form-control" type="text" data-bind="value: Street, attr: {id:'inputStreetAddressMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="">
                                <label for="inputZipcodeMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().ZipCode:null"></label>
                                <input class="form-control" type="text" data-bind="value: ZipCode, attr: {id:'inputZipcodeMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputCityMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().City:null"></label>
                                <input class="form-control" type="text" data-bind="value: City, attr: {id:'inputCityMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputCountryMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Country:null"></label>
                                <select class="form-control" style="padding-left:0;" data-bind="options: ResourceHandler.Nationality(), optionsText: 'Description', optionsValue: 'Id',value: Nationality, attr: {id:'inputNationalityMitsis_' + Index}, event: { change: GetSelectedValue.bind($data, $data)}" disabled>
                                </select>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label for="inputEmailMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Email+'*':null"></label>
                                <input class="form-control" type="text" onfocus="OnFocusChanges(this)" data-bind="value: Email, attr: {id:'inputEmailMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                                <label style="font-family:Montserrat; font-size:12px; color:#767676; line-height: 1.4; margin-top:4px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().EmailTxt:null"></label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                <label for="inputPassportNoMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Passport:null"></label>
                                <input class="form-control" type="text" data-bind="value: Passport, attr: {id:'inputPassportNoMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputMobileMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Mobile:null"></label>
                                <input class="form-control" type="text" data-bind="value: Mobile, attr: {id:'inputMobileMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                <label for="inputRoomMitsis" style="font-family:Montserrat;font-size:13px;" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Room:null"></label>
                                <input class="form-control" type="text" data-bind="value: Room, attr: {id:'inputRoomMitsis_' + Index}" spellcheck="false" autocomplete="none" readonly>
                            </div>
                        </div>
                        <!-- ###################################################################################### Accept Checkboxes ####################################################################### -->
                        <!-- ################################################################################################################################################################################ -->
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label style="font-family:Montserrat;font-size:13px;" class="form-check-label" for="inputAcceptEmails" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().SendEmail:null"></label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="text-align: center;">
                                <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptEmailsYes_' + Index, name:'optradio_' + + Index}" onclick="page1.CheckboxesCustomerInputSendEmail()" disabled><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().YesBtns:null"></span>
                                </label>
                                <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptEmailsNo_' + Index, name:'optradio_' + + Index}" onclick="page1.CheckboxesCustomerInputSendEmail()" disabled><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().NoBtns:null"></span>
                                </label>
                            </div>
                        </div>
                        <div class="row form-row">
                            <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                                <label style="font-family:Montserrat;font-size:13px;" class="form-check-label" for="inputAcceptLetter" data-bind="html: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().SendLetter:null"></label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3" style="text-align: center;">
                                <label style="font-family:Montserrat;font-size:13px;font-weight:bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptGDPRYes_' + Index, name:'optradio2_' + + Index}" onclick="page1.CheckboxesCustomerInputGDPR()" disabled><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().YesBtns:null"></span>
                                </label>
                                <label style="font-family:Montserrat;font-size:13px;font-weight:bold" class="radio-inline">
                                    <input type="radio" data-bind="attr: {id:'inputAcceptGDPRNo_' + Index, name:'optradio2_' + + Index}" onclick="page1.CheckboxesCustomerInputGDPR()" disabled><span data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().NoBtns:null"></span>
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /ko -->
                <div>
                    <div style="float:right;">
                        <button type="button" class="btn" id="prevBtn" onclick="page1.nextPrev(-1)" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Previous:null">Previous</button>
                        <button type="button" class="btn ld-ext-right" onclick="page1.nextPrev(1)" data-bind="enable: !page1.Loading() && SignalRHandler.customer() != null">
                            <span id="nextBtn" data-bind="text: LanguageHandler.selectedDictionary() != null?LanguageHandler.selectedDictionary().Next:'NEXT'"></span>
                            <span data-bind="visible: page1.Loading()" class="ld ld-ring ld-spin"></span>
                        </button>
                    </div>
                </div>
                <!-- Circles which indicates the steps of the form: -->
                <div style="text-align:center;margin-top:20px;">
                    <div data-bind="foreach: SignalRHandler.customer()">
                        <span class="step"></span>
                    </div>
                </div>
                <!-- /ko -->
            </form>
        </div>
    </div>
</div>

<!-- /.modal -->
<!-- /.container -->
<div class="modal fade modal-fullscreen footer-to-bottom" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog animated zoomInLeft">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="font-size: 16px;margin-bottom: 0;background-color: transparent;color: #4a4a4a;opacity: 1;padding: 4px 20px;">╳</button>
            </div>
            <div class="modal-body">
                <iframe id="frame" src="" style="width:100%; height:100%; border:none; margin:0; padding:0px; overflow:hidden; z-index:10;">
                    Your browser doesn't support iframes
                </iframe>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<script>
    var page1 = this;
    page1.HotelLogo = ko.observable(null);
    page1.IsContactless = ko.observable(false);
    page1.Loading = ko.observable(false);
    page1.String1Tmp = "";
    page1.hasErrorMessage = ko.observable(false);
    page1.errorMessage = ko.observable(null);
    page1.pageLoadInterval = null;
    page1.currentTab = 0;

    var contactless_flag = 0;
    page1.customerDataIndex = ko.observable(0);
    var customerList = [];

    var myhtml = document.getElementById("contentMainFormMitsis");
    var xhr = new XMLHttpRequest();
    xhr.onload = function () {
    };

    function GetHotelLogo() {
        $.ajax({
            url: "/FC/GetHotelLogo?hotelId=" + localStorage.ConfigHotelName,
            cache: false,
            type: "GET",
            crossdomain: false,
            dataType: "json",
            ContentType: "application/json; charset=utf-8",
            success: function (response) {
                if (response !== undefined && response !== null) {
                    let hotelLogo = "data:image/png;base64," + response.Logo;
                    page1.HotelLogo(hotelLogo);
                    GetDataFromDictionary();
                } else {
                     console.log("Unable to get hotelLogo with id: " + localStorage.ConfigHotelName + "!");
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    };

    function GetDataFromDictionary() {
        var finalGroup = localStorage.ConfigGroupName + "-" + localStorage.ConfigHotelName;
        $.ajax({
            url: "/FC/GetFromDictionary?HotelId=" + localStorage.ConfigHotelName + "&Group=" + finalGroup,
            cache: false,
            type: "GET",
            crossdomain: false,
            dataType: "json",
            ContentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data !== undefined && data !== null) {
                    page1.String1Tmp = data.String1;
                    if (page1.String1Tmp) {
                        SignalRHandler.String1Encrypted(data.String1Encrypted);
                        SignalRHandler.InvokeFromMobile(page1.String1Tmp);
                    }
                } else {
                    console.log("Unable to get String1 From Dictionsry!");
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    };

    function GetSignalRConfiguration() {
        $.ajax({
            url: "/FC/GetSignalRConfiguration",
            cache: false,
            type: "GET",
            crossdomain: false,
            dataType: "json",
            ContentType: "application/json; charset=utf-8",
            success: function (response) {
                if (response !== undefined && response !== null) {
                    let signalRConfig = new SignalRModel(response);
                    SignalRHandler.SetSignalRModel(signalRConfig, "@decryptedstring");
                    SignalRHandler.Connect("@ViewBag.MainConfig.grpname");
                } else {
                     console.log("Unable to get SignalR Configuration From System Info!");
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    };

    page1.pageLoadInterval = setInterval(function () {
        if (document.getElementsByClassName("tab").length > 0 && LanguageHandler.selectedDictionary() != null) {
            clearInterval(pageLoadInterval);
            //################################################### Step Wizard on Form For Multiple Profiles ################################################################//
            //##############################################################################################################################################################//
            page1.currentTab = 0; // Current tab is set to be the first tab (0)
            showTab(page1.currentTab); // Display the current tab
            page1.nextPrev = function(n) {
                // This function will figure out which tab to display
                var x = document.getElementsByClassName("tab");
                if (n >= 0) {
                    //Validate Form
                    var validateFlag = false;
                    if (SignalRHandler.baseinfo().Mode == 4) {
                        validateFlag = true;
                    }
                    else {
                        validateFlag = ValidationForm();
                    }
                    if (validateFlag == true) {
                        page1.hasErrorMessage(false);
                        page1.Loading(false);
                        // Hide the current tab:
                        x[page1.currentTab].style.display = "none";
                        // Increase or decrease the current tab by 1:
                        page1.currentTab = page1.currentTab + n;
                        // if you have reached the end of the form... :
                        if (page1.currentTab >= x.length) {
                        //...the form gets submitted:
                             placeSignatureBtn();
                             return false;
                        }
                        // Otherwise, display the correct tab:
                        showTab(page1.currentTab);
                    }
                    else {
                         showTab(page1.currentTab);
                    }
                }
                else {
                    page1.hasErrorMessage(false);
                    x[page1.currentTab].style.display = "none";
                    page1.currentTab = page1.currentTab + n;
                    showTab(page1.currentTab);
                }
            }
        }
    }, 100);

    function showTab(n) {
          // This function will display the specified tab of the form ...
          var x = document.getElementsByClassName("tab");
          x[n].style.display = "block";
          // ... and fix the Previous/Next buttons:
         if (n == 0) {
             document.getElementById("prevBtn").style.display = "none";
          } else {
             document.getElementById("prevBtn").style.display = "inline";
          }
         if (n == (x.length - 1)) {
             document.getElementById("nextBtn").innerHTML = LanguageHandler.selectedDictionary().SignatureBtnTxt;
          } else {
              document.getElementById("nextBtn").innerHTML = LanguageHandler.selectedDictionary().Next;
          }
          // ... and run a function that displays the correct step indicator:
          fixStepIndicator(n)
    }

    function fixStepIndicator(n) {
        page1.customerDataIndex(n);
        clearTimeout(page1.timeoutCleanForm)
        if (SignalRHandler.baseinfo().Mode != 2 || SignalRHandler.baseinfo().Mode != 4) {
            cleanCustomerForm();
        }
        //Add Required Values to other Profiles
        GenerateRestProfilesData();
        //Scroll top page
        window.scrollTo(0, 0);
        //Check Checkboxes Values
        CheckboxesValuesInitialize();

        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class to the current step:
        x[n].className += " active";
    }



    function CheckboxesValuesInitialize() {
        if (SignalRHandler.customer()[page1.customerDataIndex()].SendEmailValue == false || SignalRHandler.customer()[page1.customerDataIndex()].SendEmailValue == null)
        {
            document.getElementById("inputAcceptEmailsNo_" + page1.customerDataIndex()).checked = true;
        }
        else {
             document.getElementById("inputAcceptEmailsYes_" + page1.customerDataIndex()).checked = true;
        }
        if (SignalRHandler.customer()[page1.customerDataIndex()].SendLetterValue == false || SignalRHandler.customer()[page1.customerDataIndex()].SendLetterValue == null) {
            document.getElementById("inputAcceptGDPRNo_" + page1.customerDataIndex()).checked = true;
        }
        else {
             document.getElementById("inputAcceptGDPRYes_" + page1.customerDataIndex()).checked = true;
        }
    }

     page1.CheckboxesCustomerInputSendEmail = function() {
        if (document.getElementById("inputAcceptEmailsYes_" + page1.customerDataIndex()).checked) {
            SignalRHandler.customer()[page1.customerDataIndex()].SendEmailValue = true;
        }
        else {
            SignalRHandler.customer()[page1.customerDataIndex()].SendEmailValue = false;
        }
    }

    page1.CheckboxesCustomerInputGDPR = function() {
        if (document.getElementById("inputAcceptGDPRYes_" + page1.customerDataIndex()).checked) {
            SignalRHandler.customer()[page1.customerDataIndex()].SendLetterValue = true;
            clickHrefFunction();
        }
        else {
            SignalRHandler.customer()[page1.customerDataIndex()].SendLetterValue = false;
        }
    }

    $(document).ready(function () {
        page1.IsContactless(false);
        var currentUrl = (window.location.protocol) + "//" + (window.location.hostname) + (window.location.port != "" ? ":" + window.location.port : "") + "/";

        LanguageHandler.SetHotelID("@ViewBag.MainConfig.hotelname");
        ResourceHandler.SetHotelID("@ViewBag.MainConfig.hotelname");
        SignalRHandler.SetApi(currentUrl);
        SignalRHandler.SetHotelID("@ViewBag.MainConfig.hotelname");

        LanguageHandler.SetApi(currentUrl);
        LanguageHandler.GetTranslations();

        ResourceHandler.SetApi(currentUrl);
        ResourceHandler.InitializeResources();

        localStorage.ConfigURL = currentUrl;
        localStorage.ConfigGroupName = "@ViewBag.MainConfig.grpname";
        localStorage.ConfigHotelName = "@ViewBag.MainConfig.hotelname";

        GetHotelLogo();
        if ("@decryptedstring" !== "") {
            SignalRHandler.showTimerFlag(false);
            contactless_flag = 1;
            SignalRHandler.InvokeFromMobile("@decryptedstring");
        }
        else {
            GetSignalRConfiguration();
        }

        var changeLanguageAuto = ko.computed(function () {
            if (SignalRHandler.customer() != null) {
                if (typeof localStorage.CustomerInput !== 'undefined' && localStorage.backButtonFlag == "true") {
                    var customerUpdatedInput = JSON.parse(localStorage.CustomerInput);
                    SignalRHandler.customer(customerUpdatedInput);
                    localStorage.backButtonFlag = false;
                }

                localStorage.room = SignalRHandler.customer()[0].Room;
                localStorage.kdnr = SignalRHandler.customer()[0].kdnr;
                localStorage.buchnr = SignalRHandler.customer()[0].Buchnr;
                localStorage.mode = SignalRHandler.baseinfo().Mode;
                localStorage.resno = SignalRHandler.customer()[0].ReservationNo;
                localStorage.mpehotel = SignalRHandler.customer()[0].mpehotel;
                if (SignalRHandler.baseinfo().Mode == 2 || SignalRHandler.baseinfo().Mode == 4) {
                    localStorage.Remote = 1;
                    SignalRHandler.baseinfo().String1Encrypted = "@encryptedstring";
                }
                else {
                    localStorage.Remote = 0;
                }
                localStorage.baseinfo = JSON.stringify(SignalRHandler.baseinfo());

                if (SignalRHandler.baseinfo().Mode == 1 && contactless_flag == 0) {
                    page1.IsContactless(true);
                    qrfetchsucess()
                    localStorage.Remote = 1;
                    var fname = document.getElementById('firstname');
                    var lname = document.getElementById('lastname');
                    var fnamedisplayed = SignalRHandler.customer()[0].FirstName;
                    var lnamedisplayed = SignalRHandler.customer()[0].LastName;
                    fnamedisplayed = fnamedisplayed[0] + fnamedisplayed[1] + fnamedisplayed.slice(2).replace(/.(?!$)/g, '*')
                    lnamedisplayed = lnamedisplayed[0] + lnamedisplayed[1] + lnamedisplayed.slice(2).replace(/.(?!$)/g, '*')
                    fname.textContent = "   Firstname : " + fnamedisplayed;
                    lname.textContent = "   Lastname :" + lnamedisplayed;
                      var qrurl_without_dash = currentUrl
                    if (qrurl_without_dash.endsWith('/'))
                        qrurl_without_dash = qrurl_without_dash.substring(0, qrurl_without_dash.length - 1);
                     if (!SignalRHandler.String1Encrypted())
                        SignalRHandler.String1Encrypted("@encryptedstring");

                    myqrcode = document.getElementById('qrcode');
                    if (myqrcode != null) {
                        myqrcode.innerHTML = "";
                        new QRCode(myqrcode, {
                            text: currentUrl + "FC/redirect?u=&str=" + SignalRHandler.String1Encrypted() + "&h=" + "@ViewBag.MainConfig.hotelname",
                            width: 150,
                            height: 150,
                        });
                    }
                    setTimeout(function () {
                         //Delete Customer From Dictionary
                        const urldeletestring1 = localStorage.ConfigURL + 'api/MainActions/Delete/' + localStorage.ConfigHotelName + "/" + SignalRHandler.baseinfo().String1;
                        xhr.open("GET", urldeletestring1);
                        xhr.setRequestHeader("Content-type", "application/json");
                        xhr.send();
                        //Delete Localstorage
                        SignalRHandler.customer(null);
                        SignalRHandler.baseinfo().Mode = 0;
                        SignalRHandler.baseinfo().String1 = "";
                        localStorage.baseinfo = JSON.stringify(SignalRHandler.baseinfo());
                        //Show/Hide
                        page1.IsContactless(false);
                    }, 300000);

                }
            }
        });
    });

    function placeSignatureBtn() {
        page1.Loading(true);
        if (SignalRHandler.baseinfo().Mode != 4) {
            if (SignalRHandler.customer() == null) {
                page1.hasErrorMessage(true);
                page1.errorMessage(LanguageHandler.selectedDictionary().NoCustomerTxt);
                window.scrollTo(0, 0);
                page1.Loading(false);
                return;
            }

            if (!document.getElementById('inputFirstNameMitsis_' + page1.customerDataIndex()).value || !document.getElementById('inputLastNameMitsis_' + page1.customerDataIndex()).value || !document.getElementById('inputEmailMitsis_' + + page1.customerDataIndex()).value) {
                page1.hasErrorMessage(true);
                page1.errorMessage(LanguageHandler.selectedDictionary().RequiredFieldsTxt);
                window.scrollTo(0, 0);
                page1.Loading(false);
                return;
            }

            var emailValidationFlag = validate();
            if (!emailValidationFlag) {
                page1.hasErrorMessage(true);
                page1.errorMessage(LanguageHandler.selectedDictionary().ValidEmailTxt);
                window.scrollTo(0, 0);
                page1.Loading(false);
                return;
            }
        }

        localStorage.CustomerInput = JSON.stringify(SignalRHandler.customer());
        localStorage.ConfigString1 = SignalRHandler.baseinfo().String1;
        //Go to Signature Page
        var link = localStorage.ConfigURL + "ESignature/GetSettings?hotelId=" + "@ViewBag.MainConfig.hotelname";
        page1.Loading(false);
        window.location.href = link;
    }

    function ValidationForm() {
          if (SignalRHandler.customer() == null) {
            page1.hasErrorMessage(true);
            page1.errorMessage(LanguageHandler.selectedDictionary().NoCustomerTxt);
            window.scrollTo(0, 0);
            page1.Loading(false);
            return false;
        }

        if (!document.getElementById('inputFirstNameMitsis_'  + page1.customerDataIndex()).value || !document.getElementById('inputLastNameMitsis_' + page1.customerDataIndex()).value || !document.getElementById('inputEmailMitsis_' + page1.customerDataIndex()).value) {
            page1.hasErrorMessage(true);
            page1.errorMessage(LanguageHandler.selectedDictionary().RequiredFieldsTxt);
            window.scrollTo(0, 0);
            page1.Loading(false);
            return false;
        }

        var emailValidationFlag = validate();
        if (!emailValidationFlag) {
            page1.hasErrorMessage(true);
            page1.errorMessage(LanguageHandler.selectedDictionary().ValidEmailTxt);
            window.scrollTo(0, 0);
            page1.Loading(false);
            return false;
        }

        return true;
    }

    function GenerateRestProfilesData() {
        if (page1.customerDataIndex() > 0) {
            if (SignalRHandler.customer()[page1.customerDataIndex()].Email == null || SignalRHandler.customer()[page1.customerDataIndex()].Email == "" || SignalRHandler.customer()[page1.customerDataIndex()].Email == undefined) {
                SignalRHandler.customer()[page1.customerDataIndex()].Email = SignalRHandler.customer()[0].Email;
                document.getElementById('inputEmailMitsis_' + page1.customerDataIndex()).value = SignalRHandler.customer()[page1.customerDataIndex()].Email;
            }
        }
    }

    function OnFocusChanges(x) {
        x.style.color = "#333";
    }

    function validateEmail(email) {
      var re = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(email);
    }

    function validate() {
      var $result = $("#inputEmailMitsis_" + page1.customerDataIndex());
      var email = $("#inputEmailMitsis_" + page1.customerDataIndex()).val();
        if (validateEmail(email)) {
            return true;
      } else {
        $result.css("color", "red");
      }
      return false;
    }

    function CheckForAcceptEmail() {
        if (document.getElementById("inputAcceptEmailsNo_" + page1.customerDataIndex()).checked == true) {
            return false;
        }
        else if (document.getElementById("inputAcceptEmailsYes_" + page1.customerDataIndex()).checked == true) {
            return true;
        }
        else {
            return false;
        }
    }

    function StoreCustomerInputs() {
        var inputFirstNameMitsis = document.getElementById('inputFirstNameMitsis_' + page1.customerDataIndex()).value;
        var inputLastNameMitsis = document.getElementById('inputLastNameMitsis_' + page1.customerDataIndex()).value;
        var inputPassportNoMitsis = document.getElementById('inputPassportNoMitsis_' + page1.customerDataIndex()).value;
        var inputStreetAddressMitsis = document.getElementById('inputStreetAddressMitsis_' + page1.customerDataIndex()).value;
        var inputZipcodeMitsis = document.getElementById('inputZipcodeMitsis_' + page1.customerDataIndex()).value;
        var inputCityMitsis = document.getElementById('inputCityMitsis_' + page1.customerDataIndex()).value;
        var inputNationalityMitsis = document.getElementById('inputNationalityMitsis_' + page1.customerDataIndex()).value;
        var inputEmailMitsis = document.getElementById('inputEmailMitsis_' + page1.customerDataIndex()).value;
        var inputMobileMitsis = document.getElementById('inputMobileMitsis_' + page1.customerDataIndex()).value;
        var inputRoomMitsis = document.getElementById('inputRoomMitsis_' + page1.customerDataIndex()).value;
        var inputAcceptEmails = CheckForAcceptEmail();

        var customerTmpData = {
            FirstName: inputFirstNameMitsis,
            LastName: inputLastNameMitsis,
            Passport: inputPassportNoMitsis,
            Street: inputStreetAddressMitsis,
            ZipCode: inputZipcodeMitsis,
            City: inputCityMitsis,
            Nationality: inputNationalityMitsis,
            Email: inputEmailMitsis,
            Mobile: inputMobileMitsis,
            Room: inputRoomMitsis,
            SendEmailValue: inputAcceptEmails
        }
         localStorage.CustomerInput = JSON.stringify(customerTmpData);
    }

    function GetSelectedValue(data) {
        if (data) {
            SignalRHandler.customer()[page1.customerDataIndex()].CountryId = data.Country;
            ko.utils.arrayForEach(ResourceHandler.Country(), function (country) {
                if (country.Id == data.Nationality) {
                    SignalRHandler.customer()[page1.customerDataIndex()].Country = country.Description;
                    SignalRHandler.customer()[page1.customerDataIndex()].CountryId = data.Nationality;
                }
            });
        }
    }

    function clickHrefFunction() {
        if (SignalRHandler.customer()) {
            StoreCustomerInputs();
            $('#myModal').modal('show');
            setTimeout(function () {
                $("#frame").attr("src", "https://service.mitsishotels.com/privacy-policy-fast-checkin/");
            }, 2000);
        }
    }

    function cleanCustomerForm() {
        if (SignalRHandler.customer() != null) {
            page1.timeoutCleanForm = setTimeout(function () {
                //Send Log to Api that Form is Clear
                CheckinTimeoutClient();
                //Delete Customer From Dictionary
                const urldeletestring1 = localStorage.ConfigURL + 'api/MainActions/Delete/' + localStorage.ConfigHotelName + "/" + SignalRHandler.baseinfo().String1;
                xhr.open("GET", urldeletestring1);
                xhr.setRequestHeader("Content-type", "application/json");
                xhr.send();
                //Delete Localstorage
                SignalRHandler.customer(null);
                SignalRHandler.baseinfo().Mode = 0;
                SignalRHandler.baseinfo().String1 = "";
                localStorage.baseinfo = JSON.stringify(SignalRHandler.baseinfo());
                console.log("Customer has been Deleted from Form because was created more than 5 minutes before!");
            }, 1800000);
        }
    }

    function CheckinTimeoutClient() {
        var hotelid = SignalRHandler.baseinfo().HotelId;
        var string1 = SignalRHandler.baseinfo().String1;
        var group = SignalRHandler.baseinfo().Group;
        $.ajax({
            url: localStorage.ConfigURL + "api/MainActions/CheckinTimeout/" + hotelid + "/" + string1 + "/" + group,
            cache: false,
            type: "GET",
            crossdomain: true,
            dataType: "json",
            ContentType: "application/json; charset=utf-8",
            success: function (response) {
                console.log("Send CheckinTimeout Successfully!");
            }
        }).fail(function (message) {
            if (message.status != 200) {
                console.log(message);
            }
        });
    }
</script>







